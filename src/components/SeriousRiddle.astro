---
---

<div
	class="relative w-full h-full overflow-hidden text-white z-25 bg-black font-mono text-2xl p-4 <md:text-xl text-center"
	id="serious-riddle">
	<div class="md:ml-1/4 md:mr-1/4 mt-8 w-fit">
		<div id="title"></div>
		<ul id="alternatives" class="mt-4 <md:mt-8">
			<li class="alternative glow cursor-pointer w-fit ml-auto mr-auto <md:border-white <md:border-2 <md:mt-2 <md:p-1">
			</li>
			<li class="alternative glow cursor-pointer w-fit ml-auto mr-auto <md:border-white <md:border-2 <md:mt-2 <md:p-1">
			</li>
			<li class="alternative glow cursor-pointer w-fit ml-auto mr-auto <md:border-white <md:border-2 <md:mt-2 <md:p-1">
			</li>
			<li class="alternative glow cursor-pointer w-fit ml-auto mr-auto <md:border-white <md:border-2 <md:mt-2 <md:p-1">
			</li>
		</ul>
		<div id="result" class="hidden mt-4 ml-auto mr-auto <md:mt-8"></div>
		<a id="continue" class="glow hidden mt-4 cursor-pointer ml-auto mr-auto w-fit <md:border-2 <md:p-1">Next &raquo;</a>
	</div>
</div>

<style>
	.glow {
		color: #fff;
		-moz-transition: all 0.2s ease-in;
		-o-transition: all 0.2s ease-in;
		-webkit-transition: all 0.2s ease-in;
		transition: all 0.2s ease-in;
	}

	.glow:hover {
		color: #fff;
		-moz-transition: all 0.2s ease-in;
		-o-transition: all 0.2s ease-in;
		-webkit-transition: all 0.2s ease-in;
		transition: all 0.2s ease-in;
		text-shadow: 0 0 7px #fff, 0 0 10px #73fdcf, 0 0 21px #73fdcf, 0 0 42px #0fa, 0 0 82px #0fa, 0 0 92px #0fa,
			0 0 102px #0fa, 0 0 151px #0fa;
	}
</style>

<script>
	import { getRandomThreeQuiz } from './SeriousRiddleQuiz/SeriousRiddleQuiz.ts';
	enum WebsiteState {
		Selection = 'selection',
		Playful = 'playful',
		Serious = 'serious',
		Website = 'website',
	}
	interface Quiz {
		question: string;
		answers: string[];
		correctAnswer: number;
	}
	const quiz: Quiz[] = getRandomThreeQuiz();
	// Code to display a question

	const titleDiv = document.getElementById('title');
	const alternatives = document.getElementById('alternatives');
	const resultDiv = document.getElementById('result');
	const continueButton = document.getElementById('continue');
	function showQuestion(q: Quiz, i: number) {
		if (titleDiv == null) return;
		// Fill the question
		let arrayHTML = [titleDiv];
		let arrayStr = [i + 1 + '/3 ' + q.question];
		let alts = document.querySelectorAll('.alternative');
		q.answers.forEach(function (element) {
			arrayStr.push(element);
		});

		// Fill the alternatives
		alts.forEach(function (element, index) {
			arrayHTML.push(element as HTMLElement);
			element.addEventListener('click', function () {
				if (resultDiv == null || continueButton == null || alternatives == null || continueButton == null) return;

				if (q.correctAnswer == index) {
					resultDiv.textContent = 'Correct Answer!';
				} else {
					resultDiv.textContent = 'Wrong Answer!';
				}
				alternatives.style.display = 'none';
				resultDiv.style.display = 'block';
				continueButton.style.display = 'block';
			});
		});

		typeWriter(arrayHTML, arrayStr);

		if (continueButton == null) return;
		continueButton.addEventListener('click', function () {
			if (resultDiv == null || continueButton == null || alternatives == null) return;
			alternatives.style.display = 'block';
			resultDiv.style.display = 'none';
			continueButton.style.display = 'none';

			if (i + 2 > quiz.length) endRiddle();
			else showQuestion(quiz[i + 1], i + 1);
		});
	}

	function typeWriter(elements: HTMLElement[], texts: string[]) {
		let f = 0;
		let j = 0;
		elements.forEach(function (element: HTMLElement) {
			element.textContent = '';
		});
		function type() {
			if (f < texts.length) {
				const text = texts[f];
				if (j < text.length) {
					elements[f].innerHTML += text.charAt(j);
					j++;
					setTimeout(type, 30);
				} else {
					f++;
					j = 0;
					setTimeout(type, 30);
				}
			}
		}

		type();
	}

	function endRiddle() {
		if (localStorage.getItem('websiteState') != WebsiteState.Website) {
			localStorage.setItem('websiteState', WebsiteState.Website);
		}
		window.dispatchEvent(new Event('stateChange'));
	}
	showQuestion(quiz[0], 0);
</script>
