---
import { WebsiteAssets } from './LandingPage.astro';
import MainCard from './MainCard.astro';

export interface Props {
	websiteAssets: WebsiteAssets;
	id: string;
}
const { websiteAssets, id } = Astro.props;
---

<div class="max-w-8xl m-auto">
	<div class="grid grid-rows-[auto_auto] md:grid-rows-[auto_auto] gap-y-10">
		<div class="grid">
			<div class="m-auto pt-12 pb-5 sm:w-sm w-xs">
				<img src={websiteAssets.homepage.main_logo} />
			</div>
		</div>
		<div class="flex">
			<div
				class="block md:hidden flex sm:w-sm w-xs m-auto px-3 grid grid-cols-[auto_auto_auto] font-semibold text-white">
				<span class="m-auto text-xl">Light</span>
				<button
					class="toggleTheme m-auto w-20 h-10 rounded-full bg-white flex items-center transition duration-300 focus:outline-none shadow">
					<div
						class="toggleThemeSwitch w-12 h-12 relative rounded-full transition duration-500 transform bg-yellow-500 -translate-x-2 p-1 text-white">
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
							></path>
						</svg>
					</div>
				</button>
				<span class="m-auto text-xl">Dark</span>
			</div>
		</div>
		<div class="grid max-w-4xl m-auto">
			<div
				class="ml-auto mr-auto mb-auto grid md:grid-cols-[1fr_1fr] grid-cols-[1fr] grid-rows-[1fr_auto] gap-2 lg:gap-10 pb-10">
				<MainCard image={websiteAssets.homepage.right_section} text="We think" />
				<MainCard image={websiteAssets.homepage.left_section} text="We build" />
				<!-- <div class="md:row-start-2 md:col-start-1 md:col-end-3">
					<ButtonMainPage text={'Play Think Riddle'} />
				</div> -->
				<!-- <div class="md:row-start-2">
					<ButtonMainPage text={'Play Build Riddle'} />
				</div> -->
			</div>
			<section
				class="bg-[#343434] w-xs sm:w-sm md:w-full <md:dark:bg-[#343434] dark:bg-[#444444] rounded-2xl mb-10 shadow-xl">
				<div class="py-8 px-4 mx-auto max-w-screen-xl md:py-16 md:px-6">
					<div class="mx-auto max-w-screen-md sm:text-center">
						<h2 class="mb-4 text-3xl tracking-tight font-extrabold sm:text-4xl text-white <md:dark:text-white">
							Don't miss updates & benefits
						</h2>
						<p class="mx-auto mb-8 max-w-2xl font-light text-gray-400 md:mb-12 sm:text-xl dark:text-gray-400">
							Sign up for our newsletter to get updates, key insights, and become eligible for early-adopter benefits.
						</p>
						<form id={'email_form-' + id}>
							<div class="items-center mx-auto mb-3 space-y-4 max-w-screen-sm sm:flex sm:space-y-0 sm:w-2/3">
								<div class="relative w-full">
									<label for="email" class="hidden mb-2 text-sm font-medium text-gray-900 dark:text-gray-300"
										>Email address</label
									>
									<div class="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none">
										<svg
											class="w-5 h-5 text-gray-500 dark:text-gray-400"
											fill="currentColor"
											viewBox="0 0 20 20"
											xmlns="http://www.w3.org/2000/svg"
											><path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path><path
												d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path>
										</svg>
									</div>
									<input
										class="block p-3 pl-10 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 sm:rounded-none sm:rounded-l-lg dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white"
										placeholder="Enter your email"
										type="email"
										id={'email_form_text-' + id}
										required=""
									/>
								</div>
								<div>
									<button
										type="submit"
										id={'email_form_submit-' + id}
										class="<md:dark:text-white font-bold py-3 px-5 w-full text-sm text-center text-white rounded-lg border cursor-pointer dark:bg-primary-700 dark:border-primary-600 sm:rounded-none sm:rounded-r-lg dark:hover:bg-primary-800 dark:focus:ring-4bg-primary-600 hover:bg-primary-700"
										>Subscribe</button
									>
								</div>
							</div>
							<div
								class="mx-auto w-fit max-w-screen-sm text-sm text-left text-gray-400 newsletter-form-footer dark:text-gray-300">
								We care about the protection of your data. <a
									href="#"
									class="font-medium text-primary-600 dark:text-primary-500 hover:underline">Read our Privacy Policy</a
								>.
							</div>
						</form>
					</div>
				</div>
			</section>
			<!-- <form class="pb-20" id={'email_form-' + id}>
				<div class="mb-6">
					<label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Your email</label>
					<input
						type="email"
						id={'email_form_text-' + id}
						class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
						placeholder="name@runtimemachines.com"
						required
					/>
				</div>
				<button id={'email_form_submit-' + id}>Submit Form</button>
			</form> -->
		</div>
	</div>
</div>

<script>
	const switchToggle = document.getElementsByClassName('toggleThemeSwitch');
	let isDarkmode = false;

	const darkIcon = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
	<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
	</svg>`;

	const lightIcon = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
	<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
	</svg>`;

	const toggle_buttons = document.getElementsByClassName('toggleTheme');
	for (let e = 0; e < toggle_buttons.length; e++) {
		const button = toggle_buttons[e];
		button.addEventListener('click', toggleTheme);
	}

	function toggleTheme() {
		isDarkmode = !isDarkmode;
		localStorage.setItem('isDarkmode', isDarkmode);
		switchTheme();
	}

	function switchTheme() {
		if (isDarkmode) {
			for (let e = 0; e < switchToggle.length; e++) {
				const element = switchToggle[e];
				element.classList.remove('bg-yellow-500', '-translate-x-2');
				element.classList.add('bg-gray-700', 'translate-x-full');
			}
			setTimeout(() => {
				for (let e = 0; e < switchToggle.length; e++) {
					switchToggle[e].innerHTML = darkIcon;
				}
			}, 0);
			document.getElementById('right').classList.add('<md:max-h-0');
			document.getElementById('left').classList.remove('<md:max-h-0');
		} else {
			for (let e = 0; e < switchToggle.length; e++) {
				const element = switchToggle[e];
				element.classList.add('bg-yellow-500', '-translate-x-2');
				element.classList.remove('bg-gray-700', 'translate-x-full');
			}
			setTimeout(() => {
				for (let e = 0; e < switchToggle.length; e++) {
					switchToggle[e].innerHTML = lightIcon;
				}
			}, 0);
			document.getElementById('left').classList.add('<md:max-h-0');
			document.getElementById('right').classList.remove('<md:max-h-0');
		}
	}

	switchTheme();
</script>
